# .github/workflows/update-clones.yml
name: Update Clone Counter

on:
  schedule:
    - cron: '5 0 * * *'
  workflow_dispatch:

jobs:
  update-clones:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.CLONE_STATS_TOKEN }}
      GIST_ID: fc9283f4379c4b0b6211de82d01e2cec
      BADGE_FILE: asn1plus_clones.json
      METADATA_FILE: asn1plus_clones_meta.json

    steps:

      - name: Fetch 14-day clone stats
        id: fetch
        run: |
          echo "üîç Fetching 14-day clone stats‚Ä¶"
          resp=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/traffic/clones?per=day")
          window_total=$(echo "$resp" | jq '.count // 0')
          echo "WINDOW_TOTAL=$window_total" >> $GITHUB_ENV

      - name: Read & update Gist badge + metadata
        run: |
          set -e

          # Load existing Gist
          gist=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/gists/$GIST_ID")
          badge_url=$(echo "$gist" | jq -r ".files[\"$BADGE_FILE\"].raw_url")
          meta_url=$(echo "$gist" | jq -r ".files[\"$METADATA_FILE\"].raw_url")

          if [[ -z "$meta_url" ]]; then
            echo "‚ùå Metadata file '$METADATA_FILE' not found."
            exit 1
          fi

          # Parse old metadata
          old_meta=$(curl -s "$meta_url")
          prev_total=$(echo "$old_meta" | jq -r '.lastWindowTotal // 0')
          lifetime=$(echo "$old_meta" | jq -r '.lifetime // 0')

          # Compute new clones since last run
          diff=$(( WINDOW_TOTAL - prev_total ))
          if [ "$diff" -le 0 ]; then
            echo "No new clones since last run (diff=$diff)."
            exit 0
          fi

          new_lifetime=$(( lifetime + diff ))

          # Build updated badge JSON
          badge=$(jq -n \
            --arg m "$new_lifetime" \
            '{schemaVersion:1,label:"clones",message:$m,color:"blue"}')

          # Build updated metadata JSON
          new_meta=$(jq -n \
            --arg l "$new_lifetime" \
            --arg w "$WINDOW_TOTAL" \
            '{lifetime:($l|tonumber),lastWindowTotal:($w|tonumber)}')

          # Create patch payload
          payload=$(jq -n \
            --arg fb "$BADGE_FILE" --argjson bb "$badge" \
            --arg fm "$METADATA_FILE" --argjson mm "$new_meta" \
            '{files:{($fb):{content:$bb|tostring},($fm):{content:$mm|tostring}}}')

          # Update Gist
          curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -d "$payload" \
            "https://api.github.com/gists/$GIST_ID"

          echo "‚úÖ Updated badge: +$diff clones (new lifetime: $new_lifetime)."

      - name: Reveal Shields.io badge snippet
        run: |
          echo "![Clones](https://img.shields.io/badge/dynamic/json?url=https://gist.githubusercontent.com/${{ github.actor }}/${{ env.GIST_ID }}/raw/${{ env.BADGE_FILE }}&query=%24.message&label=clones&color=blue)"

