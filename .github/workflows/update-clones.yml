# .github/workflows/update-clones.yml
name: Update Clone Counter

on:
  schedule:
    - cron: '5 0 * * *'
  workflow_dispatch:

jobs:
  update-clones:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch latest daily clone count
        id: fetch
        env:
          GH_TOKEN: ${{ secrets.CLONE_STATS_TOKEN }}
        run: |
          echo "üîç Fetching 14-day clones‚Ä¶"
          resp=$(
            curl -s -H "Authorization: token $GH_TOKEN" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/traffic/clones?per=day"
          )
          echo "$resp" | jq .

          # Pick the most recent day's data
          latest=$(echo "$resp" | jq -r '.clones | max_by(.timestamp)')
          day_ts=$(echo "$latest" | jq -r .timestamp)
          day_count=$(echo "$latest" | jq -r .count)

          echo "day_ts=$day_ts"      >> $GITHUB_OUTPUT
          echo "day_count=$day_count" >> $GITHUB_OUTPUT

      - name: Read & update Gist lifetime total
        id: update_gist
        env:
          GH_TOKEN:   ${{ secrets.CLONE_STATS_TOKEN }}
          GIST_ID:    fc9283f4379c4b0b6211de82d01e2cec
          DAY_TS:     ${{ steps.fetch.outputs.day_ts }}
          DAY_COUNT:  ${{ steps.fetch.outputs.day_count }}
        run: |
          # 1. Load gist metadata & raw URL
          meta=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/gists/$GIST_ID")
          raw_url=$(echo "$meta" | jq -r '.files | keys[0] as $k | .[$k].raw_url')
          data=$(curl -s "$raw_url")

          # 2. Parse existing fields
          oldTotal=$(echo "$data" | jq -r '.message // "0"')
          prevTs=$(echo "$data" | jq -r '.lastTimestamp // empty')
          echo "üîç previous total=$oldTotal, lastTimestamp=$prevTs"

          # 3. Only add if this is a new day
          if [ "$prevTs" = "$DAY_TS" ]; then
            echo "‚ö°Ô∏è already recorded for $DAY_TS ‚Äì stopping."
            exit 0
          fi
          newTotal=$((oldTotal + DAY_COUNT))
          echo "‚ûï adding $DAY_COUNT ‚Üí new total=$newTotal"

          # 4. Patch JSON with new total + timestamp
          patched=$(jq \
            --arg m "$newTotal" \
            --arg t "$DAY_TS" \
            '.message = $m | .lastTimestamp = $t' \
            <<<"$data")
          file=$(echo "$meta" | jq -r '.files | keys[0]')
          payload=$(jq -n --arg f "$file" --arg c "$patched" \
            '{"files":{($f):{"content":$c}}}')

          # 5. Push update
          curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -d "$payload" \
            "https://api.github.com/gists/$GIST_ID" \
            | jq .
          echo "‚úÖ Gist updated"

      - name: Show badge embed snippet
        run: |
          echo "Use this in your README:"
          echo "![Clones](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/${GITHUB_ACTOR}/${GIST_ID}/raw/asn1plus_clones.json)"

