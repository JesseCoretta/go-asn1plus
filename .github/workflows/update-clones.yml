# .github/workflows/update-clones.yml
name: Update Clone Counter

on:
  schedule:
    - cron: '5 0 * * *'
  workflow_dispatch:

jobs:
  update-clones:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch 14-day clone stats
        id: fetch
        env:
          GH_TOKEN: ${{ secrets.CLONE_STATS_TOKEN }}
        run: |
          echo "üîç Fetching 14-day clone stats‚Ä¶"
          resp=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/traffic/clones?per=day")
          echo "$resp" | jq .

          # total clones in the last 14 days
          windowTotal=$(echo "$resp" | jq '.count // 0')
          echo "windowTotal=$windowTotal" >> $GITHUB_OUTPUT

      - name: Read & update Gist lifetime total
        id: update
        env:
          GH_TOKEN:     ${{ secrets.CLONE_STATS_TOKEN }}
          GIST_ID:      fc9283f4379c4b0b6211de82d01e2cec
          WINDOW_TOTAL: ${{ steps.fetch.outputs.windowTotal }}
        run: |
          echo "üîç Loading gist metadata for $GIST_ID"
          meta=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/gists/$GIST_ID")
          echo "$meta" | jq .

          raw_url=$(echo "$meta" | jq -r '.files|keys[0] as $k|.[$k].raw_url')
          data=$(curl -s "$raw_url")
          echo "$data" | jq .

          oldTotal=$(echo "$data" | jq -r '.message // "0"')
          prevWindow=$(echo "$data" | jq -r '.lastCount // "0"')
          diff=$((WINDOW_TOTAL - prevWindow))
          [ $diff -lt 0 ] && diff=0
          newTotal=$((oldTotal + diff))
          echo "‚ûï Adding $diff ‚Üí new lifetime: $newTotal"

          patched=$(jq --arg m "$newTotal" --arg l "$WINDOW_TOTAL" \
            '.message=$m | .lastCount=$l' <<<"$data")

          file=$(echo "$meta" | jq -r '.files|keys[0]')
          payload=$(jq -n --arg f "$file" --arg c "$patched" \
            '{"files":{($f):{"content":$c}}}')

          curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -d "$payload" \
            "https://api.github.com/gists/$GIST_ID" >/dev/null
          echo "‚úÖ Gist updated"

      - name: Show Shields.io badge snippet
        env:
          GIST_ID: fc9283f4379c4b0b6211de82d01e2cec
        run: |
          # build the raw-JSON URL (exactly one slash)
          raw_json_url="https://gist.githubusercontent.com/${GITHUB_ACTOR}/${GIST_ID}/raw/asn1plus_clones.json"

          # use Shields.io to turn that JSON into a badge
          echo "Use this in your README:"
          echo "![Clones](https://img.shields.io/endpoint?url=$raw_json_url)"

