# .github/workflows/update-clones.yml
name: Update Clone Counter

on:
  schedule:
    - cron: '5 0 * * *'
  workflow_dispatch:

jobs:
  update-clones:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.CLONE_STATS_TOKEN }}
      GIST_ID:  fc9283f4379c4b0b6211de82d01e2cec

    steps:
      - name: Fetch 14-day clone stats
        id: fc9283f4379c4b0b6211de82d01e2cec
        run: |
          resp=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/traffic/clones?per=day")
          windowTotal=$(echo "$resp" | jq '.count // 0')
          latest=$(echo "$resp" | jq -r '.clones | sort_by(.timestamp) | last')
          latestTs=$(echo "$latest" | jq -r .timestamp)
          latestCount=$(echo "$latest" | jq -r .count)

          echo "windowTotal=$windowTotal" >> $GITHUB_OUTPUT
          echo "latestTs=$latestTs"     >> $GITHUB_OUTPUT
          echo "latestCount=$latestCount" >> $GITHUB_OUTPUT

      - name: Read & update Gist badge + metadata
        run: |
          meta=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/gists/$GIST_ID")

          badge_url=$(echo "$meta" | jq -r '.files["asn1plus_clones.json"].raw_url // empty')
          meta_url=$(echo "$meta" | jq -r '.files["asn1plus_clones_meta.json"].raw_url // empty')

          if [ -n "$meta_url" ]; then
            meta_data=$(curl -s "$meta_url")
            oldLife=$(echo "$meta_data" | jq -r '.lifetime // "0"')
            prevTs=$(echo "$meta_data" | jq -r '.lastTimestamp // ""')
          else
            oldLife=0
            prevTs=""
          fi

          if [ "$prevTs" = "${{ steps.fetch.outputs.latestTs }}" ]; then
            diff=0
          else
            diff=${{ steps.fetch.outputs.latestCount }}
          fi
          newLife=$((oldLife + diff))

          badge_json=$(jq -n \
            --arg m "$newLife" \
            '{ schemaVersion: 1, label: "clones", message: $m, color: "blue" }')

          meta_json=$(jq -n \
            --arg l "$newLife" \
            --arg t "${{ steps.fetch.outputs.latestTs }}" \
            '{ lifetime: $l, lastTimestamp: $t }')

          payload=$(jq -n \
            --arg b "$badge_json" \
            --arg m "$meta_json" \
            '{
              files: {
                "asn1plus_clones.json":        { content: $b },
                "asn1plus_clones_meta.json":   { content: $m }
              }
            }')

          curl -s -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -d "$payload" \
            "https://api.github.com/gists/$GIST_ID" >/dev/null
          echo "âœ… Gist updated"

      - name: Show Shields.io badge snippet
        run: |
          echo "![Clones](https://img.shields.io/badge/dynamic/json?url=https://gist.githubusercontent.com/${GITHUB_ACTOR}/${GIST_ID}/raw/asn1plus_clones.json&query=$.message)"

